{"version":3,"file":"static/js/847.77854feb.chunk.js","mappings":"4OAGe,SAASA,EAAT,GAAmC,IAAbC,EAAY,EAAZA,SACnC,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAoBA,OACE,kBAAMH,SAnBa,SAAAI,GACnBA,EAAMC,iBAEN,IAAMC,EAAQJ,EAAMK,OAAOC,cAEtBF,IAILN,EAASM,GAETH,EAAS,IACV,EAOC,WACE,kBACEM,KAAK,OACLC,KAAK,QACLC,MAAOT,EACPU,SAVe,SAAAR,GACnBD,EAASC,EAAMS,cAAcF,MAC9B,EASKG,YAAY,sBAEd,mBAAQL,KAAK,SAAb,sBAGL,C,aC3Bc,SAASM,IACtB,OAAgCd,EAAAA,EAAAA,UAAS,MAAzC,eAAOe,EAAP,KAAiBC,EAAjB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAcJ,EAAaK,IAAI,UAerCC,EAAAA,EAAAA,YAAU,WACHF,IAILG,EAAAA,EAAAA,IAAYH,GACTI,MAAK,SAAAC,GACJ,IAAKA,EAAKC,cACR,MAAM,IAAIC,MACR,4EAGJb,EAAYW,EACb,IACAG,OAAM,SAAAC,GACLZ,EAAgB,CAAC,GACjBH,EAAY,MACZgB,EAAAA,GAAAA,MAAYD,EAAME,QACnB,GACJ,GAAE,CAACX,EAAaH,IAMjB,OACE,4BACE,SAACrB,EAAD,CAAYC,SANC,SAAAM,GACfc,EAAgBd,EAAQ,CAAEA,MAAAA,GAAU,CAAC,EACtC,IAKIU,IACC,wBACGA,EAASmB,QAAQC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACpB,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKF,GAAMG,MAAO,CAAEC,KAAMpB,GAAlC,SACGiB,KAFID,EADW,QAW/B,C","sources":["components/SearchForm/SearchForm.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function SearchForm({ onSubmit }) {\n  const [input, setInput] = useState('');\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const query = input.trim().toLowerCase();\n\n    if (!query) {\n      return;\n    }\n\n    onSubmit(query);\n\n    setInput('');\n  };\n\n  const handleChange = event => {\n    setInput(event.currentTarget.value);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        name=\"query\"\n        value={input}\n        onChange={handleChange}\n        placeholder=\"Search movies...\"\n      />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n}\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams, Link, useLocation } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nimport SearchForm from 'components/SearchForm';\nimport { searchMovie } from 'services';\n\n// import searchCat from 'data/searchCat.json';\n\nexport default function Movies() {\n  const [response, setResponse] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n\n  const searchQuery = searchParams.get('query');\n\n  // useEffect(() => {\n  //   if (!searchQuery) {\n  //     return;\n  //   }\n\n  //   if (searchQuery === 'cat') {\n  //     setResponse(searchCat);\n  //   } else {\n  //     setResponse(null);\n  //     toast.error(`There are no movie with the name ${searchQuery}`);\n  //   }\n  // }, [searchQuery]);\n\n  useEffect(() => {\n    if (!searchQuery) {\n      return;\n    }\n\n    searchMovie(searchQuery)\n      .then(resp => {\n        if (!resp.total_results) {\n          throw new Error(\n            'Sorry, there are no movies matching your search query. Please try again.'\n          );\n        }\n        setResponse(resp);\n      })\n      .catch(error => {\n        setSearchParams({});\n        setResponse(null);\n        toast.error(error.message);\n      });\n  }, [searchQuery, setSearchParams]);\n\n  const getQuery = query => {\n    setSearchParams(query ? { query } : {});\n  };\n\n  return (\n    <div>\n      <SearchForm onSubmit={getQuery} />\n      {response && (\n        <ul>\n          {response.results.map(({ id, title }) => (\n            <li key={id}>\n              <Link to={`${id}`} state={{ from: location }}>\n                {title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n"],"names":["SearchForm","onSubmit","useState","input","setInput","event","preventDefault","query","trim","toLowerCase","type","name","value","onChange","currentTarget","placeholder","Movies","response","setResponse","useSearchParams","searchParams","setSearchParams","location","useLocation","searchQuery","get","useEffect","searchMovie","then","resp","total_results","Error","catch","error","toast","message","results","map","id","title","to","state","from"],"sourceRoot":""}